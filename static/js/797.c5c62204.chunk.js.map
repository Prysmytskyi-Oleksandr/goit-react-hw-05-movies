{"version":3,"file":"static/js/797.c5c62204.chunk.js","mappings":"sMA6CA,UAxCmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,cACpCC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAiBL,GAAYM,KAAKV,EACnC,GAAE,CAACI,IAEJ,IAAMO,GAAWC,EAAAA,EAAAA,MASXC,EAAad,EAAOe,KAAI,SAAAC,GAAK,OACjC,SAAC,KAAD,CAAqBC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAA/D,UACE,wBAAKI,EAAMK,SADFL,EAAME,GADgB,IAOnC,OAFAX,QAAQC,IAAIM,IAGV,iCACE,kBAAMQ,SAhBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAASF,EAAMG,cACrBtB,EAAgB,CAAEC,WAAYoB,EAAOE,SAAStB,WAAWuB,QACzDH,EAAOI,MAAM7B,EACd,EAWG,WACE,kBAAO8B,KAAK,OAAOC,KAAK,gBACxB,mBAAQD,KAAK,SAAb,wBAEF,wBAAKhB,MAGV,C,sLCzCKkB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,sGACVL,EAAS1B,IAAI,uBADH,uBACzBgC,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAsB,mCAAG,WAAMtB,GAAN,yFACbc,EAAS1B,IAAT,iBAAuBY,IADV,uBAC5BoB,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtB5B,EAAgB,mCAAG,WAAML,GAAN,yFACP2B,EAAS1B,IAAI,gBAAiB,CACnD6B,OAAQ,CACNM,MAAOpC,KAHmB,uBACtBiC,EADsB,EACtBA,KADsB,kBAMvBA,EAAKC,SANkB,2CAAH,sDAShBG,EAAmB,mCAAG,WAAMxB,GAAN,yFACVc,EAAS1B,IAAT,iBAAuBY,EAAvB,aADU,uBACzBoB,EADyB,EACzBA,KADyB,kBAE1BA,EAAKK,MAFqB,2CAAH,sDAKnBC,EAAsB,mCAAG,WAAM1B,GAAN,yFACbc,EAAS1B,IAAT,iBAAuBY,EAAvB,aADa,uBAC5BoB,EAD4B,EAC5BA,KAD4B,kBAE7BA,EAAKC,SAFwB,2CAAH,qD","sources":["pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import { fetchMoviesSerch } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('searchName');\n  console.log(searchName);\n\n  useEffect(() => {\n    if (!searchName) {\n      return;\n    }\n    fetchMoviesSerch(searchName).then(setMovies);\n  }, [searchName]);\n\n  const location = useLocation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const onform = event.currentTarget;\n    setSearchParams({ searchName: onform.elements.searchName.value });\n    onform.reset(movies);\n  };\n\n  const moviesList = movies.map(movie => (\n    <Link key={movie.id} to={`/movies/${movie.id}`} state={{ from: location }}>\n      <li>{movie.title}</li>\n    </Link>\n  ));\n  console.log(moviesList);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"searchName\"></input>\n        <button type=\"Submit\">Search</button>\n      </form>\n      <ul>{moviesList}</ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e78259dddba5c209adb34bb75b422bf7',\n  },\n});\n\nexport const fetchMoviesTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMoviesDetailsById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesSerch = async searchName => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: searchName,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchMoviesReviewsById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchName","get","console","log","useEffect","fetchMoviesSerch","then","location","useLocation","moviesList","map","movie","to","id","state","from","title","onSubmit","event","preventDefault","onform","currentTarget","elements","value","reset","type","name","instance","axios","baseURL","params","api_key","fetchMoviesTrending","data","results","fetchMoviesDetailsById","query","fetchMoviesCastById","cast","fetchMoviesReviewsById"],"sourceRoot":""}