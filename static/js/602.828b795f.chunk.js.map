{"version":3,"file":"static/js/602.828b795f.chunk.js","mappings":"iOA+EA,UArEyB,WAAO,IAAD,EAC7B,GAAwCA,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAGFE,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAC/BG,GAAWC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEGC,EAAAA,EAAAA,IAAuBT,GAF1B,OAEVU,EAFU,OAGhBX,EAAgBW,GAHA,gDAIPC,EAJO,KAIPA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALV,yDAAH,qDAQjBN,GACD,GAAE,CAACR,KAGF,8BACGF,IACC,iCACE,mBAAQiB,KAAK,SAASC,QAAS,kBAAMX,EAASH,EAAf,EAA/B,sBAGA,4BACE,gBACEe,IAAG,iDAAqCnB,QAArC,IAAqCA,OAArC,EAAqCA,EAAcoB,aACtDC,IAAI,SACJC,MAAM,SAER,gCACE,+BAAKtB,QAAL,IAAKA,OAAL,EAAKA,EAAcuB,SACnB,wCAAgBC,KAAKC,MAAmC,IAAjB,OAAZzB,QAAY,IAAZA,OAAA,EAAAA,EAAc0B,eAAzC,QACA,sCACA,oCAAK1B,QAAL,IAAKA,OAAL,EAAKA,EAAc2B,aACnB,oCACA,+BACG3B,QADH,IACGA,OADH,EACGA,EAAc4B,OAAOC,KAAI,gBAAG3B,EAAH,EAAGA,GAAI4B,EAAP,EAAOA,KAAP,OACxB,wBAAcA,GAAL5B,EADe,aAMhC,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM6B,GAAG,OAAOzB,MAAO,CAAEF,KAAAA,GAAzB,qBAKF,yBACE,SAAC,KAAD,CAAM2B,GAAG,UAAUzB,MAAO,CAAEF,KAAAA,GAA5B,8BAMN,SAAC,KAAD,QAKT,C,sLC3EK4B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,sGACVL,EAASM,IAAI,uBADH,uBACzB1B,EADyB,EACzBA,KADyB,kBAE1BA,EAAK2B,SAFqB,2CAAH,qDAKnB5B,EAAsB,mCAAG,WAAMT,GAAN,yFACb8B,EAASM,IAAT,iBAAuBpC,IADV,uBAC5BU,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtB4B,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAOD,KAHmB,uBACtB7B,EADsB,EACtBA,KADsB,kBAMvBA,EAAK2B,SANkB,2CAAH,sDAShBI,EAAmB,mCAAG,WAAMzC,GAAN,yFACV8B,EAASM,IAAT,iBAAuBpC,EAAvB,aADU,uBACzBU,EADyB,EACzBA,KADyB,kBAE1BA,EAAKgC,MAFqB,2CAAH,sDAKnBC,EAAsB,mCAAG,WAAM3C,GAAN,yFACb8B,EAASM,IAAT,iBAAuBpC,EAAvB,aADa,uBAC5BU,EAD4B,EAC5BA,KAD4B,kBAE7BA,EAAK2B,SAFwB,2CAAH,qD","sources":["pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMoviesDetailsById } from 'services/api';\nimport {\n  Link,\n  useParams,\n  useNavigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState();\n  const { id } = useParams();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await fetchMoviesDetailsById(id);\n        setMovieDetails(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchMovies();\n  }, [id]);\n\n  return (\n    <>\n      {movieDetails && (\n        <>\n          <button type=\"button\" onClick={() => navigate(from)}>\n            Go back\n          </button>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movieDetails?.poster_path}`}\n              alt=\"poster\"\n              width=\"250\"\n            />\n            <section>\n              <h2>{movieDetails?.title}</h2>\n              <p>User Score: {Math.round(movieDetails?.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p> {movieDetails?.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movieDetails?.genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </section>\n          </div>\n          <div>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from }}>\n                  Cast\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"reviews\" state={{ from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e78259dddba5c209adb34bb75b422bf7',\n  },\n});\n\nexport const fetchMoviesTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMoviesDetailsById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesSerch = async searchName => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: searchName,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMoviesCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchMoviesReviewsById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","movieDetails","setMovieDetails","id","useParams","from","useLocation","state","navigate","useNavigate","useEffect","fetchMovies","fetchMoviesDetailsById","data","response","console","log","message","type","onClick","src","poster_path","alt","width","title","Math","round","vote_average","overview","genres","map","name","to","instance","axios","baseURL","params","api_key","fetchMoviesTrending","get","results","fetchMoviesSerch","searchName","query","fetchMoviesCastById","cast","fetchMoviesReviewsById"],"sourceRoot":""}